[tool.black]
# use default configuration
# keep this block so that IDEs know that it must use Black.


[tool.isort]
combine_as_imports = true
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = true
force_sort_within_sections = true
include_trailing_comma = true
known_tests = ["tests"]
lines_after_imports = 2
multi_line_output = 3
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,TESTS,LOCALFOLDER"
use_parentheses = true


[tool.pylint.MASTER]
# Include info messages into score so that pylint fails if we have
# such messages (e.g. "useless-suppression").
evaluation = "max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention + info) / statement) * 10))"

[tool.pylint."MESSAGES CONTROL"]
enable = [
    "use-symbolic-message-instead",
    "useless-suppression",
]
disable = [
    "arguments-differ",
    "arguments-renamed",
    "attribute-defined-outside-init",
    "consider-using-f-string",
    "cyclic-import",
    "duplicate-code",
    "fixme",
    "file-ignored",
    "import-outside-toplevel",
    "invalid-name",
    "locally-disabled",
    "missing-docstring",
    "no-member",
    "protected-access",
    "raise-missing-from",
    "singleton-comparison",
    "superfluous-parens",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "ungrouped-imports",
    "unnecessary-lambda-assignment",
    "unused-argument",
    "use-dict-literal",
    "useless-return",
    "wrong-import-order",    # we have a custom isort config, which pylint can't grok
    "wrong-import-position",  # same reason
]

[tool.pylint.REPORTS]
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
